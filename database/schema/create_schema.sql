-- MySQL Script generated by MySQL Workbench
-- 11/17/14 22:34:59
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema PARTADMIN
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema PARTADMIN
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `PARTADMIN` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `PARTADMIN` ;

-- -----------------------------------------------------
-- Table `PARTADMIN`.`SUPPLIER`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PARTADMIN`.`SUPPLIER` (
  `id` INT NOT NULL,
  `supplier_name` VARCHAR(45) NOT NULL,
  `supplier_email` VARCHAR(45) NULL,
  `supplier_phone` VARCHAR(45) NULL,
  `supplier_cell_phone` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PARTADMIN`.`PART_TYPE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PARTADMIN`.`PART_TYPE` (
  `id` INT NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `PARTADMIN`.`MANUFACTURER`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PARTADMIN`.`MANUFACTURER` (
  `id` INT NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `PARTADMIN`.`PART`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PARTADMIN`.`PART` (
  `id` INT NOT NULL,
  `part_number` VARCHAR(255) NOT NULL,
  `MANUFACTURER_id` INT NOT NULL,
  `order_overage` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_PART_MANUFACTURER1_idx` (`MANUFACTURER_id` ASC),
  CONSTRAINT `fk_PART_MANUFACTURER1`
    FOREIGN KEY (`MANUFACTURER_id`)
    REFERENCES `PARTADMIN`.`MANUFACTURER` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `PARTADMIN`.`ITEM`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PARTADMIN`.`ITEM` (
  `id` INT NOT NULL,
  `PART_id` INT NOT NULL,
  `min_quantity` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_ITEM_PART1_idx` (`PART_id` ASC),
  CONSTRAINT `fk_ITEM_PART1`
    FOREIGN KEY (`PART_id`)
    REFERENCES `PARTADMIN`.`PART` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `PARTADMIN`.`PRICE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PARTADMIN`.`PRICE` (
  `id` INT NOT NULL,
  `ITEM_id` INT NOT NULL,
  `SUPPLIER_id` INT NOT NULL,
  `price` INT NULL,
  `min_order` INT NULL,
  `max_order` INT NULL,
  `discount` INT NULL,
  `delivery_time` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_PRICE_ITEM1_idx` (`ITEM_id` ASC),
  INDEX `fk_PRICE_SUPPLIER1_idx` (`SUPPLIER_id` ASC),
  CONSTRAINT `fk_PRICE_ITEM1`
    FOREIGN KEY (`ITEM_id`)
    REFERENCES `PARTADMIN`.`ITEM` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PRICE_SUPPLIER1`
    FOREIGN KEY (`SUPPLIER_id`)
    REFERENCES `PARTADMIN`.`SUPPLIER` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `PARTADMIN`.`PRICE_TO_DATE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PARTADMIN`.`PRICE_TO_DATE` (
  `id` INT NOT NULL,
  `PRICE_id` INT NOT NULL,
  `to_date` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_PRICE_HISTORY_PRICE1_idx` (`PRICE_id` ASC),
  CONSTRAINT `fk_PRICE_HISTORY_PRICE1`
    FOREIGN KEY (`PRICE_id`)
    REFERENCES `PARTADMIN`.`PRICE` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `PARTADMIN`.`CUSTOMER`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PARTADMIN`.`CUSTOMER` (
  `id` INT NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `PARTADMIN`.`PROJECT`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PARTADMIN`.`PROJECT` (
  `id` INT NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  `CUSTOMER_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_PROJECT_CUSTOMER1_idx` (`CUSTOMER_id` ASC),
  CONSTRAINT `fk_PROJECT_CUSTOMER1`
    FOREIGN KEY (`CUSTOMER_id`)
    REFERENCES `PARTADMIN`.`CUSTOMER` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `PARTADMIN`.`TASK`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PARTADMIN`.`TASK` (
  `id` INT NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  `PROJECT_id` INT NOT NULL,
  `PART_id` INT NOT NULL,
  `quantity` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_TASK_PROJECT1_idx` (`PROJECT_id` ASC),
  INDEX `fk_TASK_PART1_idx` (`PART_id` ASC),
  CONSTRAINT `fk_TASK_PROJECT1`
    FOREIGN KEY (`PROJECT_id`)
    REFERENCES `PARTADMIN`.`PROJECT` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_TASK_PART1`
    FOREIGN KEY (`PART_id`)
    REFERENCES `PARTADMIN`.`PART` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `PARTADMIN`.`ORDER`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PARTADMIN`.`ORDER` (
  `id` INT NOT NULL,
  `PART_id` INT NOT NULL,
  `TASK_id` INT NOT NULL,
  `quantity` INT NULL,
  `SUPPLIER_id` INT NOT NULL,
  `date` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_ORDER_PART1_idx` (`PART_id` ASC),
  INDEX `fk_ORDER_TASK1_idx` (`TASK_id` ASC),
  INDEX `fk_ORDER_SUPPLIER1_idx` (`SUPPLIER_id` ASC),
  CONSTRAINT `fk_ORDER_PART1`
    FOREIGN KEY (`PART_id`)
    REFERENCES `PARTADMIN`.`PART` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ORDER_TASK1`
    FOREIGN KEY (`TASK_id`)
    REFERENCES `PARTADMIN`.`TASK` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ORDER_SUPPLIER1`
    FOREIGN KEY (`SUPPLIER_id`)
    REFERENCES `PARTADMIN`.`SUPPLIER` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `PARTADMIN`.`ORDER_HISTORY`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PARTADMIN`.`ORDER_HISTORY` (
  `id` INT NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  `ORDER_id` INT NOT NULL,
  `date` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_ORDER_HISTORY_ORDER1_idx` (`ORDER_id` ASC),
  CONSTRAINT `fk_ORDER_HISTORY_ORDER1`
    FOREIGN KEY (`ORDER_id`)
    REFERENCES `PARTADMIN`.`ORDER` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `PARTADMIN`.`COMPANY_STOCK`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PARTADMIN`.`COMPANY_STOCK` (
  `id` INT NOT NULL,
  `PART_id` INT NOT NULL,
  `quantity` VARCHAR(45) NULL,
  `description` VARCHAR(255) NOT NULL,
  `average_monthly_usage` INT NULL,
  `reorder_level` INT NULL,
  `reorder_quantity` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_OFFICE_ITEM_PART1_idx` (`PART_id` ASC),
  CONSTRAINT `fk_OFFICE_ITEM_PART1`
    FOREIGN KEY (`PART_id`)
    REFERENCES `PARTADMIN`.`PART` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `PARTADMIN`.`PART_TYPE_has_PART`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PARTADMIN`.`PART_TYPE_has_PART` (
  `PART_TYPE_id` INT NOT NULL,
  `PART_id` INT NOT NULL,
  PRIMARY KEY (`PART_TYPE_id`, `PART_id`),
  INDEX `fk_PART_TYPE_has_PART_PART1_idx` (`PART_id` ASC),
  INDEX `fk_PART_TYPE_has_PART_PART_TYPE1_idx` (`PART_TYPE_id` ASC),
  CONSTRAINT `fk_PART_TYPE_has_PART_PART_TYPE1`
    FOREIGN KEY (`PART_TYPE_id`)
    REFERENCES `PARTADMIN`.`PART_TYPE` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PART_TYPE_has_PART_PART1`
    FOREIGN KEY (`PART_id`)
    REFERENCES `PARTADMIN`.`PART` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `PARTADMIN`.`SUPPLIER_X_PART`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PARTADMIN`.`SUPPLIER_X_PART` (
  `id` INT NOT NULL,
  `supplier_part_number` VARCHAR(45) NULL,
  `PART_id` INT NOT NULL,
  `SUPPLIER_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_SUPPLIER_X_PART_PART1_idx` (`PART_id` ASC),
  INDEX `fk_SUPPLIER_X_PART_SUPPLIER1_idx` (`SUPPLIER_id` ASC),
  CONSTRAINT `fk_SUPPLIER_X_PART_PART1`
    FOREIGN KEY (`PART_id`)
    REFERENCES `PARTADMIN`.`PART` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_SUPPLIER_X_PART_SUPPLIER1`
    FOREIGN KEY (`SUPPLIER_id`)
    REFERENCES `PARTADMIN`.`SUPPLIER` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `PARTADMIN`.`SUPPLIER_STOCK`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PARTADMIN`.`SUPPLIER_STOCK` (
  `id` INT NOT NULL,
  `quantity` INT NULL,
  `update_date` DATETIME NULL,
  `lead_time` INT NULL,
  `SUPPLIER_X_PART_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_SUPPLIER_STOCK_SUPPLIER_X_PART1_idx` (`SUPPLIER_X_PART_id` ASC),
  CONSTRAINT `fk_SUPPLIER_STOCK_SUPPLIER_X_PART1`
    FOREIGN KEY (`SUPPLIER_X_PART_id`)
    REFERENCES `PARTADMIN`.`SUPPLIER_X_PART` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
